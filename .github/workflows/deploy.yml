name: Deploy Hugo to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      # Show what the runner sees BEFORE we install Hugo
      - name: Debug Hugo (pre-install)
        run: |
          set -euxo pipefail
          echo "PRE PATH=$PATH"
          which -a hugo || true
          hugo version || true

      # Install Hugo 0.149.1 and put it first on PATH
      - name: Install Hugo 0.149.1
        run: |
          set -euxo pipefail
          VER=0.149.1
          mkdir -p "$HOME/bin"
          curl -sL "https://github.com/gohugoio/hugo/releases/download/v${VER}/hugo_extended_${VER}_Linux-64bit.tar.gz" -o hugo.tgz
          tar -xzf hugo.tgz hugo
          mv hugo "$HOME/bin/hugo"
          chmod +x "$HOME/bin/hugo"
          echo "$HOME/bin" >> "$GITHUB_PATH"

      # Prove our Hugo is first, and hard-fail if not exact
      - name: Debug Hugo (post-install) and guard
        run: |
          set -euxo pipefail
          echo "POST PATH=$PATH"
          which -a hugo || true
          hugo version
          hv=$(hugo version | awk '{print $2}' | sed 's/^v//; s/+.*$//')
          test "$hv" = "0.149.1" || { echo "Wrong Hugo version: $hv"; exit 1; }

      # Ensure submodule is initialized on the runner
      - name: Verify submodules
        run: |
          set -euxo pipefail
          git config --file .gitmodules --list || true
          git submodule sync --recursive
          git submodule update --init --recursive
          test -d themes/PaperMod && ls -la themes/PaperMod || true

      - name: Build
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4